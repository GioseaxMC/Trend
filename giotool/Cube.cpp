#pragma once

// temporary class just for testing porposes, probably going
// to replace with a model loader, preferebly the minecraft
// json format generated by blockbench, so i can load
// the minecraft models

#include "ModelArchive.cpp"

class Model : public Entity3D {
public:
    constexpr static int faces[6][4] = {
        {7, 6, 2, 3}, //down
        {2, 6, 5, 1}, //east
        {3, 2, 1, 0}, //north
        {6, 7, 4, 5}, //south
        {0, 1, 5, 4}, //up
        {7, 3, 0, 4}, //west
    };

    Vector3f position;

    vector<Texture*> textures;
    vector<ElementInfo> elements;

    Model(Vector3f thePosition, ModelDescriptor md):
        position(thePosition),
        textures(md.textures),
        elements(md.elements)
    {};
    
    void draw(Camera& camera, FaceRenderer& fr) {
        for (ElementInfo& ei : elements) {
            for (int i=0; i<6; ++i) {
                let& face = faces[i];
                Vector3f fpoints[4] = {
                    ei.points[face[0]] + position,
                    ei.points[face[1]] + position,
                    ei.points[face[2]] + position,
                    ei.points[face[3]] + position,
                };
                fr.prepare(
                    camera,
                    fpoints,
                    *textures[ei.textureID[i]],
                    ei.uvs[i]
                );
            }
        }
    };
};
